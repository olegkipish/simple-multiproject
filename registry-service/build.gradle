buildscript {
	ext {
		springBootVersion = '1.5.8.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('io.spring.gradle:dependency-management-plugin:1.0.0.RELEASE')
        classpath('se.transmode.gradle:gradle-docker:1.2')
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'docker'

jar {
    baseName = 'registry-service'
    group = 'com.example'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = 1.8
}

repositories {
	mavenCentral()
}

ext {
	springCloudVersion = 'Camden.SR5'
}

task buildDocker(type: Docker, dependsOn: build) {
    baseImage = 'anapsix/alpine-java:8'
    push = project.hasProperty('push')
    tag = jar.baseName
    tagVersion = jar.version
    addFile {
        from jar
        rename {'app.jar'}
    }
    volume('/tmp')
    entryPoint(["sh", "-c", "java -Djava.security.egd=file:/dev/./urandom -jar /app.jar"])
}

dependencies {
	compile('org.springframework.cloud:spring-cloud-starter-eureka-server')
    compile('org.springframework.cloud:spring-cloud-starter-config')
    compile('org.springframework.boot:spring-boot-starter-actuator')
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        mavenBom("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")
	}
}
